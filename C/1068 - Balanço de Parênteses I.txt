#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct pilha{
    int topo;
    char vet[1001];
} Pilha;

Pilha* cria_pilha(){
    Pilha* p = (Pilha*) malloc(sizeof(Pilha));
    p->topo = 0;
    return p;
}

void push(Pilha* p, char* expres){
    p->topo = strlen(expres);
    strcpy(p->vet, expres);
}

int abrir(Pilha* p){
    int i;
    for(i = 0; i < p->topo; i++){
        if(p->vet[i] == '(') return 1;
        else if(p->vet[i] == ')') return 0;

    }
    return 1;
}

int fechar(Pilha* p){
    int i;
    for(i = p->topo-1; i >= 0; i--){
        if(p->vet[i] == ')') return 1;
        else if(p->vet[i] == '(') return 0;
    }
    return 1;
}

int exp_correta(Pilha* p){
    int i, abri = 0, fecha = 0, j = 0;

    if(abrir(p) && fechar(p)){
        for(i = p->topo-1; i >= p->topo/2; i--){
            if(p->vet[i] == '(') abri++;
            else if (p->vet[i] == ')') fecha++;

            if(p->vet[j] == '(' && j != i) abri++;
            else if(p->vet[j] == ')' && j != i) fecha++;

            j++;
        }
    } else return 0;
    if(abri == fecha) return 1;
    else return 0;
}

int main(){
    Pilha* p = cria_pilha();
    char c[1001];

    while(1){
        if ( scanf(" %[^\n]s", c) == EOF) break;
        push(p, c);
        //printf("\n\n\n");
        if(exp_correta(p)) printf("correct\n");
        else printf("incorrect\n");
    }
}